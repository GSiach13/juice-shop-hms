name: "My CI/CD Pipeline"
on:
  push:
    branches-ignore:
      - l10n_develop
      - gh-pages
    paths-ignore:
      - "*.md"
      - "LICENSE"
      - "monitoring/grafana-dashboard.json"
      - "screenshots/**"
    tags-ignore:
      - "*"
env:
  ANGULAR_CLI_VERSION: 15
  CYCLONEDX_NPM_VERSION: "^1.12.0"
  # PORT: 3001
jobs:
  # ci:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: ‚¨áÔ∏è Checkout repo
  #       uses: actions/checkout@v2

  #     #   - name: ‚éî Setup node
  #     #     uses: actions/setup-node@v2
  #     #     with:
  #     #       node-version: 18

  #     - name: Install CLI tools
  #       run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION

  #     - name: üì• Download deps
  #       run: npm install && echo "npm install finished successfully"

  #     - name: üß™ Run unit test script
  #       uses: nick-invision/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd #v2.8.3
  #       with:
  #         timeout_minutes: 15
  #         max_attempts: 3
  #         command: npm test

  #     - name: üß™ Run server test script
  #       uses: nick-invision/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd #v2.8.3
  #       with:
  #         timeout_minutes: 15
  #         max_attempts: 3
  #         command: npm run test:server

  #     - name: üß™ Run api test script
  #       uses: nick-invision/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd #v2.8.3
  #       with:
  #         timeout_minutes: 15
  #         max_attempts: 3
  #         command: npm run test:api

  #     - name: üß™ Run chromiium test script
  #       uses: nick-invision/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd #v2.8.3
  #       with:
  #         timeout_minutes: 15
  #         max_attempts: 3
  #         command: npm run test:chromium
  deploy-cicdrevamp:
    # needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: ssh and deploy to machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REVAMP_SERVER_SSH_HOST }}
          username: ${{ secrets.REVAMP_SERVER_SSH_USERNAME }}
          password: ${{ secrets.REVAMP_SERVER_SSH_PASSWORD }}
          command_timeout: 20m
          port: ${{ secrets.REVAMP_SERVER_SSH_PORT }}
          script: |
            cd ~/juice-shop-hms
            git pull
            docker build -t foo . 
            echo "Successfully built!"
            docker run -d -p 83.212.109.249:3001:3001 foo:latest            
            echo "Successfully deployed!"
      # bash -ci 'pm2 restart server-staging'
      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: ${{ secrets.REVAMP_SERVER_APP_IP }}
